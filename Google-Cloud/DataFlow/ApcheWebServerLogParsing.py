# -*- coding: utf-8 -*-
"""ApacheWebserverLogsParserDestStorage.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qbr00E628UN0rrA_laK13sQSsEuNQbGa
"""

#!pip install apache-beam[gcp]

import apache_beam as beam
import re
import argparse
import typing
from apache_beam.options.pipeline_options import PipelineOptions


parser = argparse.ArgumentParser()
parser.add_argument(
      '--input_topic',
      required=True,
      help=(
          'Output path to google cloud storage'))

parser.add_argument(
      '--output_path',
      required=True,
      help=(
          'Output path to google cloud storage'))

path_args, pipeline_args = parser.parse_known_args()
options = PipelineOptions(pipeline_args)

class ParseApacheServerLog(beam.DoFn):
  @classmethod
  def process(self, element):
    HOST = r'^(?P<host>.*?)'
    SPACE = r'\s'
    IDENTITY = r'\S+'
    USER = r'\S+'
    TIME = r'(?P<time>\[.*?\])'
    REQUEST = r'\"(?P<request>.*?)\"'
    STATUS = r'(?P<status>\d{3})'
    SIZE = r'(?P<size>\S+)'
    REGEX = HOST+SPACE+IDENTITY+SPACE+USER+SPACE+TIME+SPACE+REQUEST+SPACE+STATUS+SPACE+SIZE+SPACE
    match = re.search(REGEX, element)
    return [match.group('host'),match.group('time'),match.group('request') ,match.group('status'),match.group('size')]

class ServerLogSchema(typing.NamedTuple):
    host: str
    time: str
    request: str
    status: str
    size: str

with beam.Pipeline(options=options) as p:
  lines = p | "Read from source" >> beam.io.ReadFromText("gs://amank-data-1/access.log")
  parse_data = lines | "Apache server log parsing" >> beam.ParDo(ParseApacheServerLog()).with_output_types(ServerLogSchema)
  write_data_sink = parse_data | "Write data to sink" >> beam.io.WriteToText("gs://amank-data-1/output/output-dir",append_trailing_newlines=True)


