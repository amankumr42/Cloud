# -*- coding: utf-8 -*-
"""StreamBranchingInBeam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sqd02YNBcpu3yYd9iGZkJvV1Xr1ODKGn
"""

!ls
from google.colab import files
uploaded = files.upload()

! pip install apache-beam
import apache_beam as beam

#! {('mkdir data')}
p = beam.Pipeline()

class SplitRow(beam.DoFn):
  def process(self, element):
    return [element.split(',')]
  
class PairEmployees(beam.DoFn):
  def process(self, element):
    return [(element[3]+ "," + element[1],1)]

class Counting():
  def process(self, element):
    (key,values) = element
    return [(key,sum(values))]

attendance_count = (
    p 
    | beam.io.ReadFromText('dept_data.txt')
    | beam.ParDo(SplitRow())
    #|beam.ParDo(lambda element: [element.split(',')])
    | beam.ParDo(PairEmployees())
    | beam.CombinePerKey(sum)
    | beam.io.WriteToText('data/tyuty')
)

p.run()

! head -n 20 data/Accounts*
! head -n 20 data/HR*

! head -n 10 data/both*